{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the NG."
            }
        },
        "dnsNameForLBIP": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the NG."
            }
        },
        "vNETName": {
            "type": "string"
        },
        "NamingPrefix": {
            "type": "string"
        }

    },
    "variables": {
        "AddressPrefix" : "172.16.57.0/24",
        "Subnet1Name": "Subnet-1",
        "Subnet1Prefix": "172.16.57.0/27",
        "Subnet2Name": "Subnet-2",
        "Subnet2Prefix": "172.16.57.32/27",
        "Subnet3Name": "Subnet-3",
        "Subnet3Prefix": "172.16.57.64/27",
        "Subnet4Name": "Subnet-4",
        "Subnet4Prefix": "172.16.57.128/27",
        "NGAVSetName": "[concat(parameters('NamingPrefix'),'NGAV')]",
        "WebAVSetName" :  "[concat(parameters('NamingPrefix'),'WebAV')]",
        "vmNamePrefix": "[concat(parameters('NamingPrefix'),'-Web')]",
        "nicNamePrefix": "NGNIC1-",
        "nicNamePrefix2": "NGNIC2-",
        "ngNamePrefix": "[concat(parameters('NamingPrefix'),'-NG')]",
        "adminUsername": "azureuser",
        "numberOfInstances": 1,
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "NGLBIP",
        "loadBalancerName": "[concat(parameters('NamingPrefix'),'-LB')]",
        "publicIPAddressType": "Static",
        "vmStorageAccountContainerName": "vhds",
        "vmSize": "Standard_D2",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNETName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('Subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',variables('Subnet2Name'))]",
        "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',variables('Subnet3Name'))]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "PublicIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "NGPIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('nicNamePrefix'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/loadBalancerBackend')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]"
    },
    "resources": [
         {
            "name": "[parameters('vNETName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [

            ],
            "tags": {
                "displayName": "vNET",
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('AddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('Subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('Subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('Subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[variables('Subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('Subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[variables('Subnet3Prefix')]"
                        }
                    },

                        {
                            "name": "[variables('Subnet4Name')]",
                            "properties": {
                                "addressPrefix": "[variables('Subnet4Prefix')]"
                            }
                        }
                        ]
                    }
            },
         {
            "name": "[variables('WebAVSetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [ ],
            "tags": {
                "displayName": "WebAVSet"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "LoadBalancedNGIP"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForLBIP')]"
                }
            }
        },
        {
            "name": "[variables('NGAVSetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [ ],
            "tags": {
                "displayName": "NGAVSet"
            }
        },

        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "enableIPForwarding": true,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                                }
                            ]


                        }

                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicNamePrefix2'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {

                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }

                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "ngLB"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"

            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('PublicIPID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackend"
                    }
                ],
                "inboundNatRules": [

                ],
                "loadBalancingRules": [
                    {
                        "name": "TinaTCP",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 691,
                            "backendPort": 691,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    },

                    {
                        "name": "IPSec4500",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 4500,
                            "backendPort": 4500,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    },
                    {
                        "name": "IPSec500",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 500,
                            "backendPort": 500,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 691,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('ngNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "location": "[parameters('location')]",
            "plan": {
                "name": "byol",
                "Product": "barracuda-ng-firewall",
                "Publisher": "barracudanetworks"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newstorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix2'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('NGAVSetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('NGAVSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmNamePrefix'), copyIndex())]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "barracudanetworks",
                        "offer": "barracuda-ng-firewall",
                        "sku": "byol",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newstorageAccountName'),'.blob.core.windows.net/vhds/','ngosdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix'),copyindex()))]"

                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix2'),copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            }
        },
          {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('vmNIC', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            }
                          

                        }

                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newstorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('WebAVSetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('WebAVSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A1"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmNamePrefix'), copyIndex())]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newstorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('vmNIC',copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            }
        }


    ]
        }
